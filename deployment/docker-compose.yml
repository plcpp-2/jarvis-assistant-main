version: '3.8'

services:
  jarvis:
    build: 
      context: ..
      dockerfile: deployment/Dockerfile
    image: jarvis-assistant
    container_name: jarvis-assistant
    restart: unless-stopped
    environment:
      - REDIS_HOST=redis
      - POSTGRES_HOST=postgres
      - PROMETHEUS_HOST=prometheus
      - ENVIRONMENT=production
    env_file:
      - ../.env
    ports:
      - "8000:8000"
      - "8080:8080"
    volumes:
      - ../data:/app/data
      - ../logs:/app/logs
    depends_on:
      - redis
      - postgres
      - prometheus

  redis:
    image: redis:7-alpine
    container_name: jarvis-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

  postgres:
    image: postgres:15-alpine
    container_name: jarvis-postgres
    restart: unless-stopped
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  prometheus:
    image: prom/prometheus:latest
    container_name: jarvis-prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus

  grafana:
    image: grafana/grafana:latest
    container_name: jarvis-grafana
    restart: unless-stopped
    environment:
      - GF_SECURITY_ADMIN_USER=${GRAFANA_ADMIN_USER}
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD}
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
    depends_on:
      - prometheus

  nginx:
    image: nginx:alpine
    container_name: jarvis-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - jarvis

volumes:
  redis_data:
  postgres_data:
  prometheus_data:
  grafana_data:
